<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd 
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-5.0.xsd ">

	<util:properties id="comProperties"  location="classpath:application.properties" />
	<context:component-scan base-package="com.sds.ocp.svc" use-default-filters="true" />
	
	<task:scheduler id="taijiModuleScheduler" pool-size="10" />
	<task:scheduled-tasks scheduler="taijiModuleScheduler">
	
		<task:scheduled ref="moduleExecutor" method="visitorExecute" 
		      fixed-delay="#{comProperties['visitor.schedule.period'] != null ? comProperties['visitor.schedule.period'] : 5000 }" 		      
			  initial-delay="#{comProperties['visitor.schedule.initialDelay'] != null ? comProperties['visitor.schedule.initialDelay'] : 1000 }"/>

		<task:scheduled ref="moduleExecutor" method="consumptionExecute" 
		      fixed-delay="#{comProperties['consumption.schedule.period'] != null ? comProperties['consumption.schedule.period'] : 5000 }" 		      
			  initial-delay="#{comProperties['consumption.schedule.initialDelay'] != null ? comProperties['consumption.schedule.initialDelay'] : 2000 }"/>
			  
		<task:scheduled ref="moduleExecutor" method="accessExecute" 
		      fixed-delay="#{comProperties['access.schedule.period'] != null ? comProperties['access.schedule.period'] : 5000 }" 		      
			  initial-delay="#{comProperties['access.schedule.initialDelay'] != null ? comProperties['access.schedule.initialDelay'] : 3000 }"/>
			  
		<task:scheduled ref="moduleExecutor" method="carInOutExecute" 
		      fixed-delay="#{comProperties['carinout.schedule.period'] != null ? comProperties['carinout.schedule.period'] : 5000 }" 		      
			  initial-delay="#{comProperties['carinout.schedule.initialDelay'] != null ? comProperties['carinout.schedule.initialDelay'] : 1500 }"/>
			  
		<task:scheduled ref="moduleExecutor" method="visionExecute" 
		      fixed-delay="#{comProperties['vision.schedule.period'] != null ? comProperties['vision.schedule.period'] : 60000 }" 		      
			  initial-delay="#{comProperties['vision.schedule.initialDelay'] != null ? comProperties['vision.schedule.initialDelay'] : 2500 }"/>


	</task:scheduled-tasks>
	
	<bean id="httpConnection" class="com.sds.ocp.rest.HttpConnection">
		<property name="sslContextGenerator" ref="clientSslContextGenerator" />
	</bean>
	
	<!-- SSL -->
	<bean id="clientSslContextGenerator" class="com.sds.ocp.rest.ClientSSLContextGenerator"/>

</beans>
